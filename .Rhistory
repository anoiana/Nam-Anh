tibble(a = 1,b = 2),
list(tibble(c=1,d=2), 1:4)
)
rapply(l, function(x) mutate(x, RRR = 1), classes = "tbl_df")
rapply(l, function(x) mutate(x, RRR = 1), classes = "data.frame")
l
rapply(l, function(x) mutate(x, RRR = 1), classes = "data.frame")
l = list(
tibble(a = 1,b = 2),
list(tibble(c=1,d=2), 1:4)
)
rapply(l, function(x) mutate(x, RRR = 1), classes = "data.frame", how = "list")
rapply(l, function(x) mutate(x, RRR = 1), classes = "data.frame", how = "list")
l
?modify_if
f = function(l){
modify_if(l, is.data.frame, function(x) mutate(x, RRR = 1), .else = ~ f(.))
}
f(l)
l = list(
tibble(a = 1,b = 2),
list(tibble(c=1,d=2), 1:4),
"a"
)
f = function(l){
modify_if(l, is.data.frame, function(x) mutate(x, RRR = 1), .else = ~ f(.))
}
f(l)
modify_if("a", is.data.frame, ~.)
l = list(
tibble(a = 1,b = 2),
list(tibble(c=1,d=2), 1:4, list(1:10, tibble(b =6))),
"a"
)
f = function(l){
modify_if(l, is.data.frame, function(x) mutate(x, RRR = 1), .else = ~ f(.))
}
f(l)
l = list(
tibble(a = 1,b = 2),
list(tibble(c=1,d=2), 1:4, list(1:10, tibble(b =6) ,list(tibble(t =7)))),
"a"
)
f = function(l){
modify_if(l, is.data.frame, function(x) mutate(x, RRR = 1), .else = ~ f(.))
}
f(l)
f = function(l){
modify_if(l, is.data.frame, function(x) mutate(x, RRR = 1) )
}
f(l)
modify_if(1:5, is.numeric, ~.+1)
modify_if(1:5, is.integer, ~.+1)
?modify_if
modify_if(1:3,is.integer, ~ .x+1 )
modify_if(list(1,2,3),is.integer, ~ .x+1 )
modify_if(list(1,2,3),is.integer, function(i) i^2 )
modify_if(list(1,2,3),is.double, function(i) i^2 )
f(l)
f = function(l){
modify_if(l, is.data.frame, function(x) mutate(x, RRR = 1), .else =  ~f(.) )
}
f(l)
modify_if(list(1,2,3,"v"),is.double, function(i) i^2 )
modify_if(c(1,2,3,"v"),is.double, function(i) i^2)
modify_if(list(1,2,3,"v"),is.double, function(i) i^2)
f = function(i){
a = i+1
f(a)+1
}
f(1)
?modify_if
l
l[1]
l[2]
l[3]
modify_if()
modify_if
methods("modify_if")
f = function(l){
modify_if(l,
function(i){
if(is.list(i)){
f(i)
}
else if(is.data.frame){
mutate(x, RRR = 1)
}
else i
}
)
}
f(l)
f = function(l){
modify_if(l,
function(i){
if(is.list(i)){
f(i)
}
else if(is.data.frame){
mutate(i, RRR = 1)
}
else i
}
)
}
f(l)
f = function(l){
modify_if(l,
function(i){
if(is.list(i)){
f(i)
}
else if(is.data.frame(i)){
mutate(i, RRR = 1)
}
else i
}
)
}
f(l)
is.data.frame(cars)
ff = function(i){
if(is.list(i)){
f(i)
}
else if(is.data.frame(i)){
mutate(i, RRR = 1)
}
else i
}
ff(l[[1]])
ll[[1]]
l[[1]]
l[[1]] %>% is.data.frame()
f = function(l){
ff = function(i){
if(is.list(i)){
f(i)
}
else if(is.data.frame(i)){
mutate(i, RRR = 1)
}
else{
i
}
}
modify_if(l,
)
}
ff = function(i){
if(is.list(i)){
f(i)
}
else if(is.data.frame(i)){
mutate(i, RRR = 1)
}
else{
i
}
}
ff(l[[1]])
f = function(l){
ff = function(i){
if(is.list(i)){
f(i)
}
else if(is.data.frame(i)){
mutate(i, RRR = 1)
}
else{
i
}
}
modify(l,ff)
}
f(l)
?modify
f = function(l){
ff = function(i){
if(is.list(i)){
f(i)
}
else if(is.data.frame(i)){
mutate(i, RRR = 1)
}
else{
i
}
}
purrr::modify(l,ff)
}
f(l)
f = function(l){
ff = function(i){
if(is.list(i)){
f(i)
}
else if(is.data.frame(i)){
mutate(i, RRR = 1)
}
else{
i
}
}
purrr::modify(l,ff)
}
f(l)
f = function(l){
ff = function(i){
if(is.list(i)){
f(i)
}
else if(is.data.frame(i)){
mutate(i, RRR = 1)
}
else{
i
}
}
purrr::modify(l,ff)
}
l
f(l)
f = function(l){
ff = function(i){
if(is.list(i)){
f(i)
}
else if(is.data.frame(i)){
mutate(i, RRR = 1)
}
else{
i
}
}
purrr::modify(l,ff)
}
f(l)
l = list(
data.frame(a = 1,b = 2),
list(data.frame(c=1,d=2), 1:4, list(1:10, data.frame(b =6) ,list(data.frame(t =7)))),
"a"
)
rapply(l, function(x) mutate(x, RRR = 1), classes = "data.frame", how = "list")
modify_if(l, is.data.frame,function(x) mutate(x, RRR = 1))
f = function(l){
ff = function(i){
if(is.list(i)){
f(i)
}
else if(is.data.frame(i)){
mutate(i, RRR = 1)
}
else{
i
}
}
purrr::modify(l,ff)
}
f(l)
f = function(l){
ff = function(i){
if(is.list(i)){
f(i)
}
else if(is.data.frame(i)){
mutate(i, RRR = 1)
}
else{
i
}
}
purrr::modify(l,ff)
}
f(l)
f = function(l){
ff = function(i){
if(is.list(i)){
f(i)
}
else if(is.data.frame(i)){
mutate(i, RRR = 1)
}
else{
i
}
}
purrr::modify(l,ff)
}
f(l)
f(l)
f = function(l){
purrr::modify_if(l,
is.data.frame,
~ mutate(., RR = 1),
.else = ~ f(.))
}
f(l)
is.data.frame(1:3)
f(l[[3]] )
f(l[[3]])
l[[3]]
purrr::modify_if(3,
is.data.frame,
~ mutate(., RR = 1),
.else = ~ f(.))
purrr::modify_if(3:5,
is.data.frame,
~ mutate(., RR = 1),
.else = ~ f(.))
purrr::modify_if(list(1,2,3),
is.data.frame,
~ mutate(., RR = 1),
.else = ~ f(.))
purrr::modify_if
methods(modify_if)
purrr::modify_if(letters,
is.data.frame,
~ mutate(., RR = 1),
.else = ~ f(.))
purrr::modify_if(letters,
is.data.frame,
~ mutate(., RR = 1),
.else = ~ f(.))
purrr::modify_if(1,
is.data.frame,
~ mutate(., RR = 1),
.else = ~ f(.))
purrr::modify_if(c(1,2,3),
is.data.frame,
~ mutate(., RR = 1),
.else = ~ f(.))
ff = function(x){
if(is_list(x)){
f(x)
}
else if(is.data.frame(x)){
mutate(x, RR = 1)
}
else x
}
f = function(l){
ff = function(x){
if(is_list(x)){
f(x)
}
else if(is.data.frame(x)){
mutate(x, RR = 1)
}
else x
}
modify(l,ff)
}
f(l)
l = list(
data.frame(a = 1,b = 2),
list(data.frame(c=1,d=2), 1:4, list(1:10, data.frame(b =6) ,list(data.frame(t =7)))),
"a"
)
l
f(l)
f = function(l){
ff = function(x){
if(is_list(x)){
f(x)
}
else if(is.data.frame(x)){
mutate(x, RR = 1)
}
else x
}
purrr::modify(l,ff)
}
f(l)
is_list(cars)
is.list(cars)
is.list(iris)
f = function(l){
ff = function(x){
if(is.data.frame(x)){
mutate(x, RR = 1)
}
else f(x)
}
purrr::modify(l,ff)
}
f(l)
barplot(iris$Species, iris$Sepal.Length)
barplot(iris$Species, iris[,-5])
barplot(iris$Species)
?barplot
barplot(iris[,-5] ~ iris[,5])
barplot(iris[,-5] ~ iris[,5])
iris[,5]
barplot(iris[,-5]%>% as.matrix() ~ iris[,5])
names(iris)
ggplot(iris, aes(x = Species, y = Sepal.Length))+ geom_bar()
ggplot(iris, aes(x = Species))+ geom_bar()
ggplot(iris, aes(x = Species))+ geom_histogram()
ggplot(iris, aes(x = Species, y = Sepal.Length))+ geom_histogram()
ggplot(iris, aes(x = Species, y = Sepal.Length))+ geom_histogram()
ggplot(iris, aes(x = Species))+ geom_histogram()
generic2 <- function(x) UseMethod("generic1")
generic2_a1 <- function(x) "a1"
generic2_a2 <- function(x) "a2"
generic2_b1 <- function(x) {
class(x) <- "a1"
NextMethod()
}
generic2(structure(list(), class = c("b1", "a2")))
generic2 <- function(x) UseMethod("generic2")
generic2_a1 <- function(x) "a1"
generic2_a2 <- function(x) "a2"
generic2_b1 <- function(x) {
class(x) <- "a1"
NextMethod()
}
generic2(structure(list(), class = c("b1", "a2")))
numeric(())
numeric()
val <- numeric()
result <- vector("list", length(val))
result
class(result)
a = factor(letters[1:3])
a
levels(a)<- rev(levels(a))
a
length(numeric())
val <- numeric()
result <- vector("list", length(val))
for (index in 1:length(val)) {
result[index] <- val[index] ^ 2
}
result
result
val <- num eric()
result <- vector("list", length(val))
val <- numeric()
result <- vector("list", length(val))
val
result
val(1)
val(1)^2
index = 1
result[index] <- val[index] ^ 2
result[index]
val[index] ^ 2
val[index]
val[1]
a = 1:2
a[0]
val[0]
val[1]
val[0]^2
d = ggplot2::diamonds
names(diamond)
names(d)
ggplot(d, aes(x = price, y = depth))+ geom_point()
which(d$price == max(d$price))
d[which(d$price == max(d$price)),]
ggplot(d, aes(x = depth, y = price))+ geom_point()
d[which(d$price == max(d$price)),]
ggplot(d, aes(x = depth, y = price))+ geom_point(alpha = 0.1)
ggplot(d, aes(x = depth, y = price))+ geom_point(alpha = 0.1)+
scale_x_continuous(breaks = c(0,80))
ggplot(d, aes(x = depth, y = price))+ geom_point(alpha = 0.1)+
scale_x_continuous(breaks = c(0,80,2))
ggplot(d, aes(x = depth, y = price))+ geom_point(alpha = 0.1)+
scale_x_continuous(breaks = seq(0,80,2))
ggplot(d, aes(x = depth, y = price))+ geom_point(alpha = 0.1)+
scale_x_continuous(breaks = seq(0,80,1))
install.packages("dagitty")
dagitty::dagitty(cancer ~ smoking, coffee ~ smoking)
dagitty::dagitty('cancer' ~ 'smoking', 'coffee' ~ 'smoking')
dagitty::dagity('cancer' ~ 'smoking', 'coffee' ~ 'smoking')
install.packages("ggdag")
ggdag::dagify(cancer ~ smoking, coffee ~ smoking)
ggdag::dagify(cancer ~ smoking, coffee ~ smoking) %>% ggdag::ggdag()
library(magrittr)
ggdag::dagify(cancer ~ smoking, coffee ~ smoking) %>% ggdag::ggdag()
1998257*4+2329960
2329960*2.5
2329960*4
2329960*5
2329960*5 - 4819*5
30/13
10*3/23
9*3*10/(9*3+20)
3*10/(9*3+20)
remotes::install_github("rstudio/distill")
install.packages("rmarkdown")
remotes::install_github("rstudio/distill")
getwd()
setwd("~/Documents")
getwd()
setwd("~/Documents/website")
setwd()
getwd()
distill::create_website(dir = getwd(), gh_pages = TRUE)
git fetch
sessioninfo::platform_info()
library(lubridate, warn.conflicts = FALSE)
library(lubridate, warn.conflicts = FALSE)
install.packages("lubridate")
install.packages("lubridate")
3.97+2.27+0.97+1.97+5+5+3.28
3.97+2.27+0.97+1.97+5+5+3.28
install.packages("epurate")
install_github("holtzy/epuRate")
devtools::install_github("holtzy/epuRate")
