dbinom(47,12/20,80)
dbinom(47,80,12/20)
28/50
1-pbinom(47,80,12/20)
x = 1:10
y = rnorm(10)
out = lm(y~x)
out
out1 = lm(y~as.POSIXct(x, format = "%H"))
out1 = lm(y~as.POSIXct(as.character(x), format = "%H"))
out1
x1 = as.POSIXct(as.character(x), format = "%H")
out1 = lm(y~x)
x = 1:10
x1 = as.POSIXct(as.character(x), format = "%H")
y = rnorm(10)
out = lm(y~x)
out1 = lm(y~x1)
out
out1
plot(y,x)
y = rnorm(10)|> sort()
x = 1:10
x1 = as.POSIXct(as.character(x), format = "%H")
y = rnorm(10)|> sort()
out = lm(y~x)
out1 = lm(y~x1)
out
out1
plot(x,y)
plot(out)
plot(out1)
predict(out, 12)
predict(out, new = data.frame(x =12))
predict(out1, new = data.frame(x =as.POSIXct("12", format = "%H") ))
predict(out1, new = data.frame(x1 =as.POSIXct("12", format = "%H") ))
x = 1:10
x1 = as.POSIXct(as.character(x), format = "%H")
y = rnorm(10)|> sort()
out = lm(y~x)
out1 = lm(y~x1)
plot(out)
x = 1:10
x1 = as.POSIXct(as.character(x), format = "%H")
y = rnorm(10)|> sort()
out = lm(y~x)
out1 = lm(y~x1)
predict(out, new = data.frame(x =12))
predict(out1, new = data.frame(x1 =as.POSIXct("12", format = "%H") ))
predict(out, new = data.frame(x =20))
predict(out1, new = data.frame(x1 =as.POSIXct("20", format = "%H") ))
x1
x = 1:10
x1 = as.POSIXct(as.character(x), format = "%M")
y = rnorm(10)|> sort()
out = lm(y~x)
out1 = lm(y~x1)
predict(out, new = data.frame(x =20))
predict(out1, new = data.frame(x1 =as.POSIXct("20", format = "%M") ))
out1
predict(out, new = data.frame(x =20))
plot(out)
install.packages("rstanarm")
d = read.table("/Volumes/GoogleDrive/My Drive/Academic/18-Bayes/data analysis regression/ARM_Data/child.iq/child.iq.dta")
d
install.packages("foreign")
d = foreign::read.dta("/Volumes/GoogleDrive/My Drive/Academic/18-Bayes/data analysis regression/ARM_Data/child.iq/child.iq.dta")
d
View(d)
d1 = foreign::read.dta("/Volumes/GoogleDrive/My Drive/Academic/18-Bayes/data analysis regression/ARM_Data/child.iq/kidiq.dta")
d1
names(d1)
## Read in the data
# Data are at http://www.stat.columbia.edu/~gelman/arm/examples/?
data?
library ("arm")
install.packages("arm")
## Read in the data
# Data are at http://www.stat.columbia.edu/~gelman/arm/examples/?
data?
library ("arm")
## Read in the data
# Data are at http://www.stat.columbia.edu/~gelman/arm/examples/?data?
library ("arm")
data
## Read in the data
# Data are at http://www.stat.columbia.edu/~gelman/arm/examples/?data?
library ("arm")
## Pull out the smoking outcome: single data matrix
y <- data[,seq(6,12,2)]
age = rbeta(100,2,3)
age
age = rnorm(100,50,3)
age
age = rnorm(100,50,5)
age
gender = sample(c("M","F"),100, replace = T)
gender
set.seed(1234)
age = rnorm(100,50,5)
gender = sample(c("M","F"),100, replace = T)
age
set.seed()
set.seed(1234)
age = rnorm(100,50,5)
gender = sample(c("M","F"),100, replace = T)
gender
data.frame(age = age, gnder = gender)
MyTable = function(x, cap = NULL, scroll_box = FALSE, ...){
result<-
kableExtra::kbl(x, booktab = TRUE, caption = cap,...)|>
kableExtra::kable_styling(bootstrap_options = c("striped"))
if(scroll_box){
css = c("border:0.1px;",
"margin-left: auto;",
"margin-right: auto;",
"margin-bottom: 25px;")
result|>
kableExtra::scroll_box(height = "500px",
extra_css  = paste0(css, collapse = ""))
}
result
}
data.frame(age = age, gnder = gender)|>
MyTable()
data.frame(age = age, gnder = gender)|>
MyTable(scroll_box = T)
data.frame(patient 1:100,age = age, gnder = gender)|>
MyTable(scroll_box = T)
data.frame(patient= 1:100,age = age, gnder = gender)|>
MyTable(scroll_box = T)
data.frame(patient= 1:100,age = age, gnder = gender)|>
{\.(x) MyTable(x, scroll_box = T)}()
data.frame(patient= 1:100,age = age, gnder = gender)
data.frame(patient= 1:100,age = age, gnder = gender)|>
MyTable(scroll_box = T)
MyTable = function(x, cap = NULL, scroll_box = FALSE, ...){
result<-
kableExtra::kbl(x, booktab = TRUE, caption = cap,...)|>
kableExtra::kable_styling(bootstrap_options = c("striped"))
if(scroll_box){
css = c("border:0.1px;",
"margin-left: auto;",
"margin-right: auto;",
"margin-bottom: 25px;")
result|>
kableExtra::scroll_box(height = "250px",
extra_css  = paste0(css, collapse = ""))
}
result
}
data.frame(patient= 1:100,age = age, gnder = gender)|>
MyTable(scroll_box = T)
data.frame(patient= 1:100,age = age, gnder = gender)|>
MyTable(scroll_box = T, cap = "")
pacman::p_load(tidyverse, rjags, magrittr, kable.Extra)
pacman::p_load(tidyverse, rjags, magrittr, kableExtra)
MyTable = function(x, cap = NULL, scroll_box = FALSE, ...){
result<-
kableExtra::kbl(x, booktab = TRUE, caption = cap,...)|>
kableExtra::kable_styling(bootstrap_options = c("striped"))
if(scroll_box){
css = c("border:0.1px;",
"margin-left: auto;",
"margin-right: auto;",
"margin-bottom: 25px;")
result|>
kableExtra::scroll_box(height = "250px",
extra_css  = paste0(css, collapse = ""))
}
result
}
data.frame(patient= 1:100,age = age, gnder = gender)|>
MyTable(scroll_box = T, cap = "")
d = data.frame(patient= 1:100,age = age, gnder = gender)
MyTable(x= d, scroll_box = T, cap = "")
set.seed(1234)
age = rnorm(1000,50,5)
gender = sample(c("M","F"),1000, replace = T)
d = data.frame(patient= 1:1000,age = age, gender = gender)
MyTable(x= d, scroll_box = T, cap = "")
d
kbl(d)
kbl(d)|>
kable_styling(bootstrap_options = c("striped"))
kbl(d)|>
kable_styling(bootstrap_options = c("striped"))|>
kableExtra::scroll_box(height = "500px",
extra_css  = paste0(css, collapse = ""))
css = c("border:0.1px;",
"margin-left: auto;",
"margin-right: auto;",
"margin-bottom: 25px;")
kbl(d)|>
kable_styling(bootstrap_options = c("striped"))|>
kableExtra::scroll_box(height = "500px",
extra_css  = paste0(css, collapse = ""))
r = kbl(d)|>
kable_styling(bootstrap_options = c("striped"))
kableExtra::scroll_box(r,height = "500px",
extra_css  = paste0(css, collapse = ""))
MyTable = function(x, cap = NULL, scroll_box = FALSE, ...){
result<-
kableExtra::kbl(x, booktab = TRUE, caption = cap,...)|>
kableExtra::kable_styling(bootstrap_options = c("striped"))
if(scroll_box){
css = c("border:0.1px;",
"margin-left: auto;",
"margin-right: auto;",
"margin-bottom: 25px;")
result|>
kableExtra::scroll_box(height = "500px",
extra_css  = paste0(css, collapse = ""))
}
result
}
MyTable(d, scroll_box = TRUE)
x = d
result<-
kableExtra::kbl(x, booktab = TRUE, caption = cap,...)|>
kableExtra::kable_styling(bootstrap_options = c("striped"))
result<-
kableExtra::kbl(x, booktab = TRUE, caption = cap)|>
kableExtra::kable_styling(bootstrap_options = c("striped"))
result<-
kableExtra::kbl(x, booktab = TRUE, caption = "")|>
kableExtra::kable_styling(bootstrap_options = c("striped"))
result
css = c("border:0.1px;",
"margin-left: auto;",
"margin-right: auto;",
"margin-bottom: 25px;")
result|>
kableExtra::scroll_box(height = "500px",
extra_css  = paste0(css, collapse = ""))
gender = sample(c("M","F"),100, replace = T)|>
factor()
gender
mean(gender)
set.seed(1234)
age = rnorm(100,50,5)
gender = sample(c(0,1),100, replace = T)
data.frame(patient= 1:100,age = age, gender = gender)|>
MyTable(scroll_box = T)
data.frame(patient= 1:100,age = age, gender = gender)|>
MyTable(scroll_box = T)|>
footnote(general = "1:Female; 0:Male", footnote_as_chunk = T)
Z = matrix(c(age-age2,gender-gender2), ncol = 2)
age2 = 52
gender2=0.5
Z = matrix(c(age-age2,gender-gender2), ncol = 2)
Z
obj_func = function(alpha,Z) sum(exp(Z%*%alpha))
objfn = function(alpha,Z) sum(exp(Z%*%alpha))
optim(par = c(0,0), fn = objfn, Z = Z)
optim(par = c(0,0), fn = objfn, Z = Z)$par
Z = matrix(c(age-age2,gender-gender2), ncol = 2)
objfn = function(alpha,Z) sum(exp(Z%*%alpha))
alpha = optim(par = c(0,0), fn = objfn, Z = Z)$par
w = Z%*%alpha
w
w = exp(Z%*%alpha)
w
w = exp(Z%*%alpha)|>
{\(x) x/sum(x)}()
p = exp(Z%*%alpha)|>
{\(x) x/sum(x)}()
Z = matrix(c(age-age2,gender-gender2), ncol = 2)
objfn = function(alpha,Z) sum(exp(Z%*%alpha))
alpha = optim(par = c(0,0), fn = objfn, Z = Z)$par
p = exp(Z%*%alpha)|>
{\(x) x/sum(x)}()
t(p)%*%age
t(p)%*%matrix(c(age,gender),ncol=2)
sum(p^2)/sum(p)^2
sum(p)^2/sum(p^2)
Z%*%alpha
exp(Z%*%alpha)
sum(p*100)
w = Z%*%alpha
w = exp(Z%*%alpha)
w
w = c(exp(Z%*%alpha))
w
sum(w)^2/sum(w^2)
matrix(c("age" = age,"gender"=gender),ncol=2)
t(p)%*%matrix(c("age" = age,"gender"=gender),ncol=2)
