extra_css  = paste0(css, collapse = ""))
MyTable = function(x, cap = NULL, scroll_box = FALSE, ...){
result<-
kableExtra::kbl(x, booktab = TRUE, caption = cap,...)|>
kableExtra::kable_styling(bootstrap_options = c("striped"))
if(scroll_box){
css = c("border:0.1px;",
"margin-left: auto;",
"margin-right: auto;",
"margin-bottom: 25px;")
result|>
kableExtra::scroll_box(height = "500px",
extra_css  = paste0(css, collapse = ""))
}
result
}
MyTable(d, scroll_box = TRUE)
x = d
result<-
kableExtra::kbl(x, booktab = TRUE, caption = cap,...)|>
kableExtra::kable_styling(bootstrap_options = c("striped"))
result<-
kableExtra::kbl(x, booktab = TRUE, caption = cap)|>
kableExtra::kable_styling(bootstrap_options = c("striped"))
result<-
kableExtra::kbl(x, booktab = TRUE, caption = "")|>
kableExtra::kable_styling(bootstrap_options = c("striped"))
result
css = c("border:0.1px;",
"margin-left: auto;",
"margin-right: auto;",
"margin-bottom: 25px;")
result|>
kableExtra::scroll_box(height = "500px",
extra_css  = paste0(css, collapse = ""))
gender = sample(c("M","F"),100, replace = T)|>
factor()
gender
mean(gender)
set.seed(1234)
age = rnorm(100,50,5)
gender = sample(c(0,1),100, replace = T)
data.frame(patient= 1:100,age = age, gender = gender)|>
MyTable(scroll_box = T)
data.frame(patient= 1:100,age = age, gender = gender)|>
MyTable(scroll_box = T)|>
footnote(general = "1:Female; 0:Male", footnote_as_chunk = T)
Z = matrix(c(age-age2,gender-gender2), ncol = 2)
age2 = 52
gender2=0.5
Z = matrix(c(age-age2,gender-gender2), ncol = 2)
Z
obj_func = function(alpha,Z) sum(exp(Z%*%alpha))
objfn = function(alpha,Z) sum(exp(Z%*%alpha))
optim(par = c(0,0), fn = objfn, Z = Z)
optim(par = c(0,0), fn = objfn, Z = Z)$par
Z = matrix(c(age-age2,gender-gender2), ncol = 2)
objfn = function(alpha,Z) sum(exp(Z%*%alpha))
alpha = optim(par = c(0,0), fn = objfn, Z = Z)$par
w = Z%*%alpha
w
w = exp(Z%*%alpha)
w
w = exp(Z%*%alpha)|>
{\(x) x/sum(x)}()
p = exp(Z%*%alpha)|>
{\(x) x/sum(x)}()
Z = matrix(c(age-age2,gender-gender2), ncol = 2)
objfn = function(alpha,Z) sum(exp(Z%*%alpha))
alpha = optim(par = c(0,0), fn = objfn, Z = Z)$par
p = exp(Z%*%alpha)|>
{\(x) x/sum(x)}()
t(p)%*%age
t(p)%*%matrix(c(age,gender),ncol=2)
sum(p^2)/sum(p)^2
sum(p)^2/sum(p^2)
Z%*%alpha
exp(Z%*%alpha)
sum(p*100)
w = Z%*%alpha
w = exp(Z%*%alpha)
w
w = c(exp(Z%*%alpha))
w
sum(w)^2/sum(w^2)
matrix(c("age" = age,"gender"=gender),ncol=2)
t(p)%*%matrix(c("age" = age,"gender"=gender),ncol=2)
# packages installation
pacman::p_load(tidyverse, kableExtra, magrittr,scatterplot3d)
rel1 = data.frame(PSSS = c(2,3,4,5), OSBDR = c(0, 3.027, 4.945, 10.037))
rel2<-
data.frame( PSSS = c("2-3","4-5"),
OSBDR = sapply(list(2:3,4:5), function(i) mean(rel1$OSBDR[rel1$PSSS %in% i]))
)
info = cbind(PSSS = c(2,3,4,5), OSBDR = c(0, 3.027, 4.945, 10.037))
osbdr = sapply(list(2:3,4:5),function(i) {info[info[,'PSSS']==i,"OSBDR"]%>% mean()%>% `names<-`(paste0(i,collapse = "-"))})
pr<-
data.frame(
Treatment = c("IN Dexmedetomidine", "Midazolam", "Nitrous Oxide"),
Mean = mean(rep(osbdr, c(9,6)))%>% c(1.9,0.4),
Variance =  var(rep(osbdr, c(9,6)))  %>% c(rep(1.58^2,2))
)
row.names(pr)<- paste0("trt",1:3)
GetPosMean = function(size = 1, x, sig_sq, mu0, v_sq, beta){
n = length(x)
nu = beta/v_sq+1
n0 = beta/sig_sq/(nu-1)
# pos mean
mu_n = (n0*mu0+sum(x))/(n+n0)
beta_n = beta+(n-1)*var(x)/2+n*n0*(mean(x)-mu0)^2/2/(n+n0)
wiqid::rt2(size, location = mu_n, scale = sqrt(beta_n/(n+n0)/(nu+n/2)),df = 2*nu+n)
}
mu_0t = pr[,"Mean"]
v_sq = 2.77^2
sig_sq_t = pr[,"Variance"]
beta =  6 # 7
nu = beta/v_sq+1
n_0t = beta/sig_sq_t/(nu-1)
beta =  8 # 7
# packages installation
pacman::p_load(tidyverse, kableExtra, magrittr,scatterplot3d)
rel1 = data.frame(PSSS = c(2,3,4,5), OSBDR = c(0, 3.027, 4.945, 10.037))
rel2<-
data.frame( PSSS = c("2-3","4-5"),
OSBDR = sapply(list(2:3,4:5), function(i) mean(rel1$OSBDR[rel1$PSSS %in% i]))
)
info = cbind(PSSS = c(2,3,4,5), OSBDR = c(0, 3.027, 4.945, 10.037))
osbdr = sapply(list(2:3,4:5),function(i) {info[info[,'PSSS']==i,"OSBDR"]%>% mean()%>% `names<-`(paste0(i,collapse = "-"))})
pr<-
data.frame(
Treatment = c("IN Dexmedetomidine", "Midazolam", "Nitrous Oxide"),
Mean = mean(rep(osbdr, c(9,6)))%>% c(1.9,0.4),
Variance =  var(rep(osbdr, c(9,6)))  %>% c(rep(1.58^2,2))
)
row.names(pr)<- paste0("trt",1:3)
GetPosMean = function(size = 1, x, sig_sq, mu0, v_sq, beta){
n = length(x)
nu = beta/v_sq+1
n0 = beta/sig_sq/(nu-1)
# pos mean
mu_n = (n0*mu0+sum(x))/(n+n0)
beta_n = beta+(n-1)*var(x)/2+n*n0*(mean(x)-mu0)^2/2/(n+n0)
wiqid::rt2(size, location = mu_n, scale = sqrt(beta_n/(n+n0)/(nu+n/2)),df = 2*nu+n)
}
mu_0t = pr[,"Mean"]
v_sq = 2.77^2
sig_sq_t = pr[,"Variance"]
beta =  8 # 7
nu = beta/v_sq+1
n_0t = beta/sig_sq_t/(nu-1)
pgamma(1/v_sq+ sqrt(nu/beta^2),nu,beta) - pgamma(1/v_sq- sqrt(nu/beta^2),nu,beta)
optimize(f = function(x) dgamma(x, nu,beta), interval = c(0,100), maximum = T)$maximum %>%
{round(.,3)== round(1/v_sq,3)}
sapply(beta/n_0t, function(i) optimize(f = function(x) dgamma(x, nu,i), interval = c(0,100), maximum = T)$maximum)%>%
{round(.,3) == round(1/sig_sq_t,3)}
R <- S <- 2500
N = seq(5,100,by = 5)
set.seed(12345)
alc1trt<-
sapply(N, function(n){ # for each sample size n
replicate(R,{ # repeat R time to calculate average
# beta =  rexp(1,0.17)
# nu = beta/v_sq+1
# n_0t = beta/sig_sq_t/(nu-1)
##################
lambda = rgamma(1, nu,beta) # simulate lambda
mu_t = sapply(1:3, function(i) rnorm(1,mu_0t[i],sqrt(1/n_0t[i]/lambda))) # simulate mu_t
x_t = sapply(mu_t, function(i) rnorm(n,i,sqrt(1/lambda)))%>%
`colnames<-`(paste0("trt",1:3))
sapply(paste0("trt",1:3), function(i){
GetPosMean(R, x_t[,i], sig_sq = pr[i,"Variance"], mu0 = pr[i,"Mean"], v_sq = v_sq, beta = beta)%>%
purrr::compose(unname,diff,HDInterval::hdi)()
})
})%>% apply(1,mean)
})
d = cbind(N,t(alc1trt), max = apply(alc1trt,2,max))
d<-
as.data.frame(d)%>%
`names<-`(c("Sample size", "Treatment 1", "Treatment 2", "Treatment 3","Max{ALC}"))
d
N = seq(55,120,by = 5)
set.seed(12345)
alc1trt<-
sapply(N, function(n){ # for each sample size n
replicate(R,{ # repeat R time to calculate average
# beta =  rexp(1,0.17)
# nu = beta/v_sq+1
# n_0t = beta/sig_sq_t/(nu-1)
##################
lambda = rgamma(1, nu,beta) # simulate lambda
mu_t = sapply(1:3, function(i) rnorm(1,mu_0t[i],sqrt(1/n_0t[i]/lambda))) # simulate mu_t
x_t = sapply(mu_t, function(i) rnorm(n,i,sqrt(1/lambda)))%>%
`colnames<-`(paste0("trt",1:3))
sapply(paste0("trt",1:3), function(i){
GetPosMean(R, x_t[,i], sig_sq = pr[i,"Variance"], mu0 = pr[i,"Mean"], v_sq = v_sq, beta = beta)%>%
purrr::compose(unname,diff,HDInterval::hdi)()
})
})%>% apply(1,mean)
})
d = cbind(N,t(alc1trt), max = apply(alc1trt,2,max))
d<-
as.data.frame(d)%>%
`names<-`(c("Sample size", "Treatment 1", "Treatment 2", "Treatment 3","Max{ALC}"))
d
d
# save(d, file = "ALC_table.RData")
#--------------------------------------------------------------------------------
d[,c(1,5)]
# save(d, file = "ALC_table.RData")
#---------------------:-----------------------------------------------------------
cbind(d[1:7,c(1,5)],d[8:14,c(1,5)])
# save(d, file = "ALC_table.RData")
#---------------------:-----------------------------------------------------------
cbind(d[1:7,c(1,5)],d[8:14,c(1,5)])|>
xtable2kable()
# save(d, file = "ALC_table.RData")
#---------------------:-----------------------------------------------------------
cbind(d[1:7,c(1,5)],d[8:14,c(1,5)])|>
xtable()
# save(d, file = "ALC_table.RData")
#---------------------:-----------------------------------------------------------
cbind(d[1:7,c(1,5)],d[8:14,c(1,5)])|>
kableExtra::xtable2kable()
# save(d, file = "ALC_table.RData")
#---------------------:-----------------------------------------------------------
cbind(d[1:7,c(1,5)],d[8:14,c(1,5)])|>
xtable::xtable()|>
kableExtra::xtable2kable()
# save(d, file = "ALC_table.RData")
#---------------------:-----------------------------------------------------------
cbind(d[1:7,c(1,5)],d[8:14,c(1,5)])|>
xtable::xtable()|>
print(include.rownames=FALSE)|>
kableExtra::xtable2kable()
?xtable
# save(d, file = "ALC_table.RData")
#---------------------:-----------------------------------------------------------
cbind(d[1:7,c(1,5)],d[8:14,c(1,5)])|>
xtable::xtable()|>
kableExtra::xtable2kable()|>
kableExtra::kable()
# save(d, file = "ALC_table.RData")
#---------------------:-----------------------------------------------------------
cbind(d[1:7,c(1,5)],d[8:14,c(1,5)])|>
xtable::xtable()|>
kableExtra::xtable2kable()|>
kableExtra::kbl()
?kableExtra::xtable2kable
# save(d, file = "ALC_table.RData")
#---------------------:-----------------------------------------------------------
cbind(d[1:7,c(1,5)],d[8:14,c(1,5)])|>
xtable::xtable()|>
kableExtra::xtable2kable(col.names = NULL)|>
kableExtra::kable_styling()
# save(d, file = "ALC_table.RData")
#---------------------:-----------------------------------------------------------
cbind(d[1:7,c(1,5)],d[8:14,c(1,5)])|>
xtable::xtable()|>
kableExtra::xtable2kable(col.names = NULL)|>
kableExtra::remove_column(1)|>
kableExtra::kable_styling()
# save(d, file = "ALC_table.RData")
#---------------------:-----------------------------------------------------------
cbind(d[1:7,c(1,5)],d[8:14,c(1,5)])|>
xtable::xtable()|>
kableExtra::xtable2kable(col.names = NULL)|>
kableExtra::kable_styling()|>
kableExtra::remove_column(1)
# save(d, file = "ALC_table.RData")
#---------------------:-----------------------------------------------------------
cbind(d[1:7,c(1,5)],d[8:14,c(1,5)])|>
xtable::xtable()|>
kableExtra::xtable2kable(col.names = NULL)|>
kableExtra::kable_styling()|>
kableExtra::remove_column(1)
# save(d, file = "ALC_table.RData")
#---------------------:-----------------------------------------------------------
cbind(d[1:7,c(1,5)],d[8:14,c(1,5)])|>
kable()|>
kable_styling()
# save(d, file = "ALC_table.RData")
#---------------------:-----------------------------------------------------------
cbind(d[1:7,c(1,5)],d[8:14,c(1,5)])|>
xtable::xtable()|>
kableExtra::xtable2kable(col.names = NULL)
# save(d, file = "ALC_table.RData")
#---------------------:-----------------------------------------------------------
cbind(d[1:7,c(1,5)],d[8:14,c(1,5)])|>
xtable::xtable()|>
kableExtra::xtable2kable(col.names = NULL)
# save(d, file = "ALC_table.RData")
#---------------------:-----------------------------------------------------------
cbind(d[1:7,c(1,5)],d[8:14,c(1,5)])|>
xtable::xtable()|>
print()
# save(d, file = "ALC_table.RData")
#---------------------:-----------------------------------------------------------
cbind(d[1:7,c(1,5)],d[8:14,c(1,5)])|>
xtable::xtable()|>
print(include.rownames = F)
# save(d, file = "ALC_table.RData")
#---------------------:-----------------------------------------------------------
cbind(d[1:7,c(1,5)],d[8:14,c(1,5)])|>
xtable::xtable()|>
print(include.rownames = F)|>
kableExtra::xtable2kable(col.names = NULL)
# save(d, file = "ALC_table.RData")
#---------------------:-----------------------------------------------------------
cbind(d[1:7,c(1,5)],d[8:14,c(1,5)])|>
round(2)
# save(d, file = "ALC_table.RData")
#---------------------:-----------------------------------------------------------
cbind(d[1:7,c(1,5)],d[8:14,c(1,5)])|>
round(2)|>
purrr::modify(as.character)
# save(d, file = "ALC_table.RData")
#---------------------:-----------------------------------------------------------
cbind(d[1:7,c(1,5)],d[8:14,c(1,5)])|>
round(2)|>
purrr::modify(as.character)|>
xtable::xtable()|>
print(include.rownames = F)|>
kableExtra::xtable2kable(col.names = NULL)
beta_val = c(0.1,1,10,100,1000,10000)%>%{c(.,.*5)}%>% sort()
set.seed(12345)
by_beta<-
sapply(beta_val, function(b){ # for each sample size n
beta =  b
nu = beta/v_sq+1
n_0t = beta/sig_sq_t/(nu-1)
replicate(R,{ # repeat R time to calculate average
lambda = rgamma(1, nu,beta) # simulate lambda
mu_t = sapply(1:3, function(i) rnorm(1,mu_0t[i],sqrt(1/n_0t[i]/lambda))) # simulate mu_t
x_t = sapply(mu_t, function(i) rnorm(95,i,sqrt(1/lambda)))%>%
`colnames<-`(paste0("trt",1:3))
sapply(paste0("trt",1:3), function(i){
GetPosMean(R, x_t[,i], sig_sq = pr[i,"Variance"], mu0 = pr[i,"Mean"], v_sq = v_sq, beta = b)%>%
HDInterval::hdi()%>%
diff()%>%
unname()
})
})%>% apply(1,mean)
})
m = cbind(beta_val,t(by_beta),"Max" = apply(by_beta,2,max))
m<-
as.data.frame(m)%>%
`names<-`(c("Precision","Treatment 1","Treatment 2","Treatment 3", "Max{ALC}"))
m[,1]<- format(m[,1],scientific = F)%>% stringr::str_remove_all(" +")%>%
stringr::str_replace("\\.0","")
m
m[,c(1,5)]
m[,c(1,5)]|>
round(2)|>
as.character()
m[,c(1,5)]|>
round(2)|>
purrr::modify(as.character)
m = cbind(beta_val,t(by_beta),"Max" = apply(by_beta,2,max))
m[,c(1,5)]|>
round(2)|>
purrr::modify(as.character)
m
m = cbind(beta_val,t(by_beta),"Max" = apply(by_beta,2,max))
m<-
as.data.frame(m)%>%
`names<-`(c("Precision","Treatment 1","Treatment 2","Treatment 3", "Max{ALC}"))
m
m[,1]<- format(m[,1],scientific = F)%>% stringr::str_remove_all(" +")%>%
stringr::str_replace("\\.0","")
m
purrr::modify_if(is.numeric, purrr::compose(as.character, ~ round(.,2)))
purrr::modify_if(is.numeric, purrr::compose(as.character ))
purrr::modify_if(is.numeric, as.character)
purrr::modify_if(is.numeric, paste0)
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,2) ))
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,3) ))
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4) ))
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,5) ))
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4) ))
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
xtable::xtable()|>
print(include.rownames = F)
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
xtable::xtable()|>
print(include.rownames = F)|>
kableExtra::xtable2kable()
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
xtable::xtable()|>
print(include.rownames = F)|>
kableExtra::xtable2kable()|>
kableExtra::kable_styling(position = "center")
?kableExtra::kable_styling
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
xtable::xtable()|>
print(include.rownames = F)|>
kableExtra::xtable2kable(align = "c")|>
kableExtra::kable_styling(position = "center")
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
xtable::xtable()|>
print(include.rownames = F)|>
kableExtra::xtable2kable()
kableExtra::xtable2kable(align=c(rep('c',times=7))
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
xtable::xtable()|>
print(include.rownames = F)|>
kableExtra::xtable2kable(align=c(rep('c',times=7)))
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
xtable::xtable()|>
print(include.rownames = F)|>
kableExtra::kbl(align=c(rep('c',times=7)))
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
kableExtra::kbl(align=c(rep('c',times=7)))
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
kableExtra::kbl(align=c(rep('c',times=7)))|>
print()
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
xtable::xtable()|>
print(include.rownames = F)
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
xtable::xtable(align = "cc")|>
print(include.rownames = F)
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
xtable::xtable(align = "ccc")|>
print(include.rownames = F)
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
slice(1:8)|>
xtable::xtable(align = "ccc")|>
print(include.rownames = F)
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
slice(1:8)|>
{\(x) cbind(x[,1:4],x[,5:8])}()|>
xtable::xtable(align = "ccc")|>
print(include.rownames = F)
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
slice(1:8)|>
{\(x) cbind(x[,1:4],x[,5:8])}()
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
slice(1:8)|>
{\(x) cbind(x[1:4,],x[5:8,])}()|>
xtable::xtable(align = "ccc")|>
print(include.rownames = F)
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
slice(1:8)
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
slice(1:8)|>
{\(x) cbind(x[1:4,],x[5:8,])}()
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
slice(1:8)|>
{\(x) cbind(x[1:4,],x[5:8,])}()|>
xtable::xtable(align = "ccc")
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
slice(1:8)|>
{\(x) cbind(x[1:4,],x[5:8,])}()|>
xtable::xtable(align = "cccc")|>
print(include.rownames = F)
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
slice(1:8)|>
{\(x) cbind(x[1:4,],x[5:8,])}()|>
xtable::xtable(align = "cccc")
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
slice(1:8)|>
{\(x) cbind(x[1:4,],x[5:8,])}()|>
xtable::xtable(align = "ccccc")|>
print(include.rownames = F)
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
slice(1:10)|>
{\(x) cbind(x[1:5,],x[6:10,])}()|>
xtable::xtable(align = "ccccc")|>
print(include.rownames = F)
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))
purrr::modify_if(m,is.numeric, purrr::compose(as.character, ~ round(.,4)))|>
select(1,5)|>
{\(x) cbind(x[1:6,],x[7:12,])}()|>
xtable::xtable(align = "ccccc")|>
print(include.rownames = F)
1.1013-0.98
b = 1000
beta =  b
nu = beta/v_sq+1
n_0t = beta/sig_sq_t/(nu-1)
v_sq
pbeta(sqrt(s_sq)- sqrt(7.673),nu,beta)
pbeta(sqrt(v_sq)- sqrt(7.673),nu,beta)
pbeta(sqrt(v_sq)+ sqrt(7.673),nu,beta) - pbeta(sqrt(v_sq)- sqrt(7.673),nu,beta)
pbeta(sqrt(v_sq)+ sqrt(7.673),nu,beta)
1- pbeta(sqrt(v_sq)+ sqrt(7.673),nu,beta)
pbeta(sqrt(v_sq)- sqrt(7.673),nu,beta)
