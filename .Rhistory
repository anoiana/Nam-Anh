rec0 [label = 'Outcome']
rec1 [label = 'LOS']
rec2 [label = 'AE']
rec3 [label =  'Nursing Load']
rec4 [label = 'Rescue Medication']
rec11 [label = 'Under Sedation']
rec12 [label = 'adequate Sedation']
rec13 [label = 'Over Sedation']
rec111 [label = 'No Additional medication']
rec112 [label = 'Additional medication']
rec121 [label = 'No Additional medication']
rec131 [label = 'No Additional medication']
# edge definitions with the node IDs
rec0 -> rec1
rec0 -> rec2
rec0 -> rec3
rec0 -> rec4
rec1 -> rec11
rec1 -> rec12
rec1 -> rec13
subgraph cluster1 {
rec11 -> rec111
rec11 -> rec112
rec12 -> rec121
rec13 -> rec131
}
}",
height = 500)
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = LR]
node [shape = rectangle]
rec0 [label = 'Outcome']
rec1 [label = 'LOS']
rec2 [label = 'AE']
rec3 [label =  'Nursing Load']
rec4 [label = 'Rescue Medication']
rec11 [label = 'Under Sedation']
rec12 [label = 'adequate Sedation']
rec13 [label = 'Over Sedation']
rec111 [label = 'No Additional medication']
rec112 [label = 'Additional medication']
rec121 [label = 'No Additional medication']
rec131 [label = 'No Additional medication']
rec1111 [label = 'Extra time']
# edge definitions with the node IDs
rec0 -> rec1
rec0 -> rec2
rec0 -> rec3
rec0 -> rec4
rec1 -> rec11
rec1 -> rec12
rec1 -> rec13
subgraph cluster1 {
rec11 -> rec111
rec11 -> rec112
rec12 -> rec121
rec13 -> rec131
rec111 -> rec1111
rec112 -> rec111
}
}",
height = 500)
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = LR]
node [shape = rectangle]
rec0 [label = 'Outcome']
rec1 [label = 'LOS']
rec2 [label = 'AE']
rec3 [label =  'Nursing Load']
rec4 [label = 'Rescue Medication']
rec11 [label = 'Under Sedation']
rec12 [label = 'adequate Sedation']
rec13 [label = 'Over Sedation']
rec111 [label = 'No Additional medication']
rec112 [label = 'Additional medication']
rec121 [label = 'No Additional medication']
rec131 [label = 'No Additional medication']
rec1111 [label = 'Extra time']
# edge definitions with the node IDs
rec0 -> rec1
rec0 -> rec2
rec0 -> rec3
rec0 -> rec4
rec1 -> rec11
rec1 -> rec12
rec1 -> rec13
subgraph cluster1 {
rec11 -> rec111
rec11 -> rec112
rec12 -> rec121
rec13 -> rec131
rec111 -> rec1111
rec112 -> rec1111
}
}",
height = 500)
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = LR]
node [shape = rectangle]
rec0 [label = 'Outcome']
rec1 [label = 'LOS']
rec2 [label = 'AE']
rec3 [label =  'Nursing Load']
rec4 [label = 'Rescue Medication']
rec11 [label = 'Under Sedation']
rec12 [label = 'adequate Sedation']
rec13 [label = 'Over Sedation']
rec111 [label = 'No Additional medication']
rec112 [label = 'Additional medication']
rec121 [label = 'No Additional medication']
rec131 [label = 'No Additional medication']
rec1111 [label = 'Extra time']
rec1211 [label = 'normal']
# edge definitions with the node IDs
rec0 -> rec1
rec0 -> rec2
rec0 -> rec3
rec0 -> rec4
rec1 -> rec11
rec1 -> rec12
rec1 -> rec13
subgraph cluster1 {
rec11 -> rec111
rec11 -> rec112
rec12 -> rec121
rec13 -> rec131
rec111 -> rec1111
rec112 -> rec1111
rec111 -> rec1211
}
}",
height = 500)
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = LR]
node [shape = rectangle]
rec0 [label = 'Outcome']
rec1 [label = 'LOS']
rec2 [label = 'AE']
rec3 [label =  'Nursing Load']
rec4 [label = 'Rescue Medication']
rec11 [label = 'Under Sedation']
rec12 [label = 'adequate Sedation']
rec13 [label = 'Over Sedation']
rec111 [label = 'No Additional medication']
rec112 [label = 'Additional medication']
rec121 [label = 'No Additional medication']
rec131 [label = 'No Additional medication']
rec1111 [label = 'Extra time']
rec1211 [label = 'normal']
# edge definitions with the node IDs
rec0 -> rec1
rec0 -> rec2
rec0 -> rec3
rec0 -> rec4
rec1 -> rec11
rec1 -> rec12
rec1 -> rec13
subgraph cluster1 {
rec11 -> rec111
rec11 -> rec112
rec12 -> rec121
rec13 -> rec131
rec111 -> rec1111
rec112 -> rec1111
rec121 -> rec1211
}
}",
height = 500)
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = LR]
node [shape = rectangle]
rec0 [label = 'Outcome']
rec1 [label = 'LOS']
rec2 [label = 'AE']
rec3 [label =  'Nursing Load']
rec4 [label = 'Rescue Medication']
rec11 [label = 'Under Sedation']
rec12 [label = 'adequate Sedation']
rec13 [label = 'Over Sedation']
rec111 [label = 'No Additional medication']
rec112 [label = 'Additional medication']
rec121 [label = 'No Additional medication']
rec131 [label = 'No Additional medication']
rec1111 [label = 'Extra time']
rec1211 [label = 'normal']
rec1211 [label = 'normal']
rec1311 [label = 'normal']
# edge definitions with the node IDs
rec0 -> rec1
rec0 -> rec2
rec0 -> rec3
rec0 -> rec4
rec1 -> rec11
rec1 -> rec12
rec1 -> rec13
subgraph cluster1 {
rec11 -> rec111
rec11 -> rec112
rec12 -> rec121
rec13 -> rec131
rec111 -> rec1111
rec112 -> rec1111
rec121 -> rec1211
rec131 -> rec1311
}
}",
height = 500)
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = LR]
node [shape = rectangle]
rec0 [label = 'Outcome']
rec1 [label = 'LOS']
rec2 [label = 'AE']
rec3 [label =  'Nursing Load']
rec4 [label = 'Rescue Medication']
rec11 [label = 'Under Sedation']
rec12 [label = 'adequate Sedation']
rec13 [label = 'Over Sedation']
rec111 [label = 'No Additional medication']
rec112 [label = 'Additional medication']
rec121 [label = 'No Additional medication']
rec131 [label = 'No Additional medication']
rec1111 [label = 'Extra time']
rec1211 [label = 'normal']
rec1211 [label = 'normal']
rec1311 [label = 'short']
# edge definitions with the node IDs
rec0 -> rec1
rec0 -> rec2
rec0 -> rec3
rec0 -> rec4
rec1 -> rec11
rec1 -> rec12
rec1 -> rec13
subgraph cluster1 {
rec11 -> rec111
rec11 -> rec112
rec12 -> rec121
rec13 -> rec131
rec111 -> rec1111
rec112 -> rec1111
rec121 -> rec1211
rec131 -> rec1311
}
}",
height = 500)
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = LR]
node [shape = rectangle]
rec0 [label = 'Outcome']
# LOS-------------------------------------------
rec1 [label = 'LOS']
rec2 [label = 'AE']
rec3 [label =  'Nursing Load']
rec4 [label = 'Rescue Medication']
# under sedation adequate over sedation
rec11 [label = 'Under Sedation']
rec12 [label = 'adequate Sedation']
rec13 [label = 'Over Sedation']
# addition or no addition
rec111 [label = 'No Additional medication']
rec112 [label = 'Additional medication']
rec121 [label = 'No Additional medication']
rec131 [label = 'No Additional medication']
# result for onset time
rec1111 [label = 'Extra time']
rec1211 [label = 'normal']
rec1211 [label = 'normal']
rec1311 [label = 'short']
#----------------------------------------------------------
# AE
rec21 [label = 'Under Sedation']
rec22 [label = 'adequate Sedation']
rec23 [label = 'Over Sedation']
# edge definitions with the node IDs
rec0 -> rec1
rec0 -> rec2
rec0 -> rec3
rec0 -> rec4
rec1 -> rec11
rec1 -> rec12
rec1 -> rec13
# AE
rec2 -> rec21
rec2 -> rec22
rec2 -> rec23
subgraph cluster1 {
# LOS
rec11 -> rec111
rec11 -> rec112
rec12 -> rec121
rec13 -> rec131
rec111 -> rec1111
rec112 -> rec1111
rec121 -> rec1211
rec131 -> rec1311
# AE
}
}",
height = 500)
# Chunk 1: setup
if(!library(pacman, logical.return = TRUE)) install.packages("pacman")
pacman::p_load(tidyverse, rjags, magrittr, kableExtra)
lb = function(...){
x = unlist(strsplit(as.character(rlang::expr(...)),"\\."))
word = switch(which(c("tab","fig","eq")%in% x[1]),"Table ","Figure ","Eq.")
paste0(word,"\\@ref(",x[1],":",x[2],")")
}
MyTable = function(x, cap = NULL, ...){
kableExtra::kbl(x, booktab = FALSE, caption = cap,...)|>
kableExtra::kable_styling(bootstrap_options = c("striped"))
}
set.seed(1234)
ipd = tibble(
trt = sample(c("treatment","placebo"),100, replace = T),
age = rpois(100,30),
gender = sample(c("F","M"),100, prob = c(0.3,0.7), replace = T),
weight = rgamma(100,70,1.2),
region = sample(c("urban","rural","suburban"), 100, replace = T, prob = c(0.5,0.4,0.1))
)
ipd|> MyTable("Individual patient data.", format = "html")|>
kableExtra::scroll_box(height = "500px", width = "400px",
extra_css  = "border:0.1px; margin-left: auto;margin-right: auto; margin-bottom: 25px;")
ipd|>
select(age,weight)
ipd|>
summarise(across(c(age,weight), ~ c("mean" = mean(.), "variance" = var(.))))
ipd|>
summarise(across(c(age,weight), list(mean,var) ))
ipd|>
summarise(across(c(age,weight), list(mean = mean,var = var) ))
ipd|>
subset("age","weight")
ipd[,c("age","weight")]
ipd[,c("age","weight")]|>
vapply(\(x) c(mean(x),var(x)), numeric(2))
ipd[,c("age","weight")]|>
vapply(\(x) c("mean" = mean(x),"variance"=var(x)), numeric(2))
ipd[,c("age","weight")]|>
vapply(\(x) c("mean" = mean(x),"variance"=var(x)), rep(NA_real_,2) )
d1<-
ipd[,c("age","weight")]|>
vapply(\(x) c("mean" = mean(x),"variance"=var(x)), rep(NA_real_,2))
ipd[,c("gender","region")]
ipd[,c("gender","region")]|>
vapply(summary, rep(NA_real_,3))
ipd[,c("gender","region")]|>
vapply(summary, rep(NA,3))
ipd[,c("gender","region")]|>
lapply(summary)
ipd[,c("gender","region")]|>
lapply(table)
ipd[,c("gender","region")]|>
lapply(table)|>
lift_dl(cbind)()
ipd[,c("gender","region")]|>
lapply(table)|>
lift_dl(rbind)()
ipd[,c("gender","region")]|>
lapply(table)
d2<-
ipd[,c("gender","region")]|>
lapply(\(x) table(x)/sum(table(x))  )
d2
d2<-
ipd[,c("gender","region")]|>
lapply(\(x) table(x)|>{./sum(.)}  )
d2<-
ipd[,c("gender","region")]|>
lapply(\(x) table(x)|>{./sum(.)}()  )
d2<-
ipd[,c("gender","region")]|>
lapply(\(x) table(x)|>{\(y) y/sum(y)}()  )
d2
d2<-
ipd[,c("gender","region")]|>
lapply(\(x) table(x)/sum(table(x))  )
d2
d1
d3 = matrix(c(35,25,62,47.5), ncol = 2)%>%
`colnames<-`(c("age","weight"))%>%
`row.names<-`(c("mean","variance"))
d3
d4 = list(gender = c("F" = 0.4,"M" = 0.6), region = c("rural" = 0.4),"suburban" = 0.2, "urban" = 0.4)
d4
d4 = list('gender' = c("F" = 0.4,"M" = 0.6), 'region' = c("rural" = 0.4,"suburban" = 0.2, "urban" = 0.4))
d4
set.seed(1234)
ipd = tibble(
outcome = rnorm(100),
trt = sample(c("treatment","placebo"),100, replace = T),
age = rpois(100,30),
gender = sample(c("F","M"),100, prob = c(0.3,0.7), replace = T),
weight = rgamma(100,70,1.2),
region = sample(c("urban","rural","suburban"), 100, replace = T, prob = c(0.5,0.4,0.1))
)
ipd|> MyTable("Individual patient data.", format = "html")|>
kableExtra::scroll_box(height = "500px", width = "400px",
extra_css  = "border:0.1px; margin-left: auto;margin-right: auto; margin-bottom: 25px;")
set.seed(1234)
ipd = tibble(
outcome = rnorm(100, mean = 10),
trt = sample(c("treatment","placebo"),100, replace = T),
age = rpois(100,30),
gender = sample(c("F","M"),100, prob = c(0.3,0.7), replace = T),
weight = rgamma(100,70,1.2),
region = sample(c("urban","rural","suburban"), 100, replace = T, prob = c(0.5,0.4,0.1))
)
ipd|> MyTable("Individual patient data.", format = "html")|>
kableExtra::scroll_box(height = "500px", width = "400px",
extra_css  = "border:0.1px; margin-left: auto;margin-right: auto; margin-bottom: 25px;")
ipd|> MyTable("Individual patient data.", format = "html")|>
kableExtra::scroll_box(height = "500px", width = "400px",
extra_css  = "border:0.1px; margin-left: auto;margin-right: auto; margin-bottom: 25px;")
set.seed(1234)
ipd = tibble(
outcome = rnorm(100, mean = 10),
trt = sample(c("treatmentA","placebo"),100, replace = T),
age = rpois(100,30),
gender = sample(c("F","M"),100, prob = c(0.3,0.7), replace = T),
weight = rgamma(100,70,1.2),
region = sample(c("urban","rural","suburban"), 100, replace = T, prob = c(0.5,0.4,0.1))
)
ipd|> MyTable("Individual patient data.", format = "html")|>
kableExtra::scroll_box(height = "500px", width = "400px",
extra_css  = "border:0.1px; margin-left: auto;margin-right: auto; margin-bottom: 25px;")
ipd|> MyTable("Individual patient data.", format = "html")|>
kableExtra::scroll_box(height = "500px", width = "400px",
extra_css  = "border:0.1px; margin-left: auto;margin-right: auto; margin-bottom: 25px;")
age <- seq(15,60, by = 0.5)
gender <-c(0,1)
treatment<-c(0,1)
t = expand.grid(age,gender,treatment)
p <- seq(1/364, 1/364, length.out=364)
x0 <- seq(1, 1, length.out=364)
x1 = t[,1]
x2 = t[,2]
x3=t[,3]
V <- matrix(c(x0,x1,x2,x3), nrow = 4, ncol=364, byrow=TRUE)
V
dim(V)
t(V)
fd<-function(z){
c<-(exp(0.9*z))/(1+(exp(0.9*z)))
#c<-pnorm(z*0.62)
return(c)
}
repeat{
M<-V%*%diag(p)%*%t(V)
M.inv<-solve(M)
d.matrix<-t(V)%*%M.inv%*%V
d<-diag(d.matrix)
F.j<- d-sum(p*d)
if(max(F.j)<(10^-(6))) break
p.new<-p*fd(F.j)/sum(p*fd(F.j))  # Multiplicative algorithm
p<-p.new
}
p.op<-round(p.new,5)
p.op
optim<-matrix(p.op,nrow = 1,ncol = 364)
optim
p.op
optim
nop
age <- seq(15,60, by = 0.5)
gender <-c(0,1)
treatment<-c(0,1)
t = expand.grid(age,gender,treatment)
p <- seq(1/364, 1/364, length.out=364)
x0 <- seq(1, 1, length.out=364)
x1 = t[,1]
x2 = t[,2]
x3=t[,3]
V <- matrix(c(x0,x1,x2,x3), nrow = 4, ncol=364, byrow=TRUE)
fd<-function(z){
c<-(exp(0.9*z))/(1+(exp(0.9*z)))
#c<-pnorm(z*0.62)
return(c)
}
repeat{
M<-V%*%diag(p)%*%t(V)
M.inv<-solve(M)
d.matrix<-t(V)%*%M.inv%*%V
d<-diag(d.matrix)
F.j<- d-sum(p*d)
if(max(F.j)<(10^-(6))) break
p.new<-p*fd(F.j)/sum(p*fd(F.j))  # Multiplicative algorithm
p<-p.new
}
p
t
p.op<-round(p.new,5)
optim<-matrix(p.op,nrow = 1,ncol = 364)
# column name is age:
colnames(optim)<-c(x1)
nop<-optim[,-(which(colSums(optim)==0))]
nop
# column name is gender
colnames(optim)<-c(x2)
nop<-optim[,-(which(colSums(optim)==0))]
nop
# column name is treatment
colnames(optim)<-c(x3)
nop<-optim[,-(which(colSums(optim)==0))]
nop
Age<-c(15,60,15,60,15,60,15,60)
Gender<-c(0,0,1,1,0,0,1,1)
Treatment<-c(0,0,0,0,1,1,1,1)
P_optimal<-c(0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125)
result<- data.frame(Age,Gender,Treatment,P_optimal)
result
t[p>0.0001,]
